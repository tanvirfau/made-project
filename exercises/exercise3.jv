pipeline WorldBankDataPipeline {

    // Data extraction and processing flow
    DataRetriever
        -> ExcelFileInterpreter
        -> TargetSheetSelector
        -> HeaderUpdater
        -> DataRangePicker
        -> GDPDataProcessor
        -> GDPDataSaver;

    DataRangePicker  
        -> BondDataProcessor
        -> BondDataSaver;

    // Download the dataset from the provided URL
    block DataRetriever oftype HttpExtractor {
        url: "https://thedocs.worldbank.org/en/doc/7d852628d96b9411d43e5d36d5dff941-0050062022/original/Graphs-Chapter-5-02082022.xlsx";
    }

    // Interpret the downloaded Excel file
    block ExcelFileInterpreter oftype XLSXInterpreter {}

    // Select the target sheet
    block TargetSheetSelector oftype SheetPicker {
        sheetName: "Figure S5.1.2";
    }

    // Select the specific data range
    block DataRangePicker oftype CellRangeSelector {
        select: range P2:S45;
    }

    // Update the header columns
    block HeaderUpdater oftype CellWriter {
        at: range P2:S2;  
        write: [
            "Country Code",
            "Economy",
            "GDP per Capita",
            "Bond Issuance Share"
        ];
    }

    // Process GDP-related data
    block GDPDataProcessor oftype TableInterpreter {
        header: true;
        columns: [
            "Country Code" oftype CountryCodeValidator,
            "GDP per Capita" oftype GDPValueValidator
        ];
    }

    // Process Bond Issuance Share data
    block BondDataProcessor oftype TableInterpreter {
        header: true;
        columns: [
            "Country Code" oftype CountryCodeValidator,
            "Bond Issuance Share" oftype BondShareValidator
        ];
    }

    // Save GDP data into SQLite
    block GDPDataSaver oftype SQLiteLoader {
        table: "gdpPerCapita";
        file: "./country-stats.sqlite";
    }

    // Save Bond Issuance Share data into SQLite
    block BondDataSaver oftype SQLiteLoader {
        table: "bondIssuance";
        file: "./country-stats.sqlite";
    }
}

// Validation Rules
constraint ValidCountryCode on CountryCodeValidator:
    value matches /^[A-Za-z]{3}$/;

constraint PositiveDecimal on GDPValueValidator:
    value > 0;

constraint RangeCheck on BondShareValidator:
    value >= 0 and value <= 1;

// Validation for Data Columns
valuetype CountryCodeValidator oftype text {
    constraints: [ValidCountryCode];
}

valuetype GDPValueValidator oftype decimal {
    constraints: [PositiveDecimal];
}

valuetype BondShareValidator oftype decimal {
    constraints: [RangeCheck];
}
