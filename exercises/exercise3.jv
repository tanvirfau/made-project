// Defining the pipeline to process worldwide airport data
pipeline WorldAirportsPipeline {

  // Step 1: Extract data from the provided URL
  WorldAirportsExtractor 
    -> WorldAirportsTextInterpreter // Step 2: Interpret the data as raw text
    -> WorldAirportsCSVInterpreter // Step 3: Parse the CSV file with the specified delimiter
    -> WorldAirportsTableInterpreter // Step 4: Interpret and validate table structure
    -> WorldAirportsLoader; // Step 5: Load the processed data into an SQLite database

  // Block to fetch data from the given URL
  block WorldAirportsExtractor oftype HttpExtractor {
    url: "https://opendata.rhein-kreis-neuss.de/api/explore/v2.1/catalog/datasets/rhein-kreis-neuss-flughafen-weltweit/exports/csv?lang=en&timezone=Europe%2FBerlin&use_labels=true&delimiter=%3B";
  }

  // Block to interpret the fetched data as raw text
  block WorldAirportsTextInterpreter oftype TextFileInterpreter { }

  // Block to parse the CSV data with the specified delimiter
  block WorldAirportsCSVInterpreter oftype CSVInterpreter {
    delimiter: ";"; // Use semicolon as the delimiter for the CSV file
  }

  // Block to interpret and validate table structure
  block WorldAirportsTableInterpreter oftype TableInterpreter {
    header: true; // Indicates that the CSV file contains a header row
    columns: [
      "Lfd. Nummer" oftype integer, // Unique serial number for each airport
      "Name des Flughafens" oftype text, // Name of the airport
      "Ort" oftype text, // Location (city or town) of the airport
      "Land" oftype text, // Country where the airport is located
      "IATA" oftype text, // IATA code (3-character airport code)
      "ICAO" oftype text, // ICAO code (4-character airport code)
      "Latitude" oftype decimal, // Geographical latitude of the airport
      "Longitude" oftype decimal, // Geographical longitude of the airport
      "Altitude" oftype integer // Altitude of the airport (in feet)
    ];
  }

  // Block to load the processed data into an SQLite database
  block WorldAirportsLoader oftype SQLiteLoader {
    table: "world_airports"; // Table name for storing airport data
    file: "./world_airports.sqlite"; // SQLite database file name
  } 
}
